pro magint, file, w, sint, mu, cint, plot=plot
;Read output from synthmag code.
;Inputs:
; file (string) name of ".prf" file generated by synthmag
; w (vector(nx)) wavelength scale for output spectrum
; /plot (switch) enables diagnostic plot
;Outputs:
; sint (array(nx,nmu)) intensity spectra for mu values
; mu (vector(nmu)) mu values corresponding to intensities in sint
; cint (vector(2,nmu)) continuum intensities at endpoints of x for mu values
;History:
; 06-Jun-96 Valenti  Wrote.
; 12-Jul-97 Valenti  Adapted from synthmag.

if n_params() lt 4 then begin
  print, 'syntax: magint, file, w, sint, mu [,cint ,/plot]'
  retall
endif

;Get information about external wavelength scale.
  wmin = min(w, max=wmax)
  nw = n_elements(w)
  if w(0) gt w(nw-1) then begin
    message, /info, 'magint: wavelength scale must be increasing'
    return
  endif

;Open file.
  openr, unit, file, /get_lun

;Skip line list.
  sbuff = ''
  nlin = 0L
  readf, unit, nlin
  for i=1,nlin do readf, unit, sbuff

;Read number of mu values.
  nmu = 0
  readf, unit, nmu

;Initialize arrays.
  sint  = dblarr(nw, nmu)
  mu    = fltarr(nmu)
  cint  = dblarr(2, nmu)
  wcint = dblarr(2, nmu)

;Loop thru mu angles.
  nx = 0L
  imu = 0
  xmu = 0d0
  cdata = dblarr(4)
  for imu=0, nmu-1 do begin

;Read and store header information.
    readf, unit, imu, xmu
    imu = imu - 1				;switch to zero base
    mu(imu) = xmu				;current mu value
    readf, unit, cdata
    wcint(*,imu) = cdata( [0,2] )		;continuum wavelengths
    cint(*,imu)  = cdata( [1,3] )		;continuum intensities
    readf, unit, nx				;number of wavelength

;Check that model spectra do not extend beyond external wavelength scale.
    if wcint(0,imu) gt wmin or $
       wcint(1,imu) lt wmax then begin
      print, 'magint: external wavelength scale extends beyond model range.'
      print, '        trim to wavelength range [ ' $
           + strtrim(string(wcint(0,imu), form='(f20.4)'), 2) $
           + ', ' + strtrim(string(wcint(1,imu), form='(f20.4)'), 2) $
           + ' ]'
      sint = 0
      free_lun, unit
      return
    endif

;Initialize spectrum variables.
    x = dblarr(nx)
    y = dblarr(nx)

;Read wavelengths and intensities.
    readf, unit, x, y

;Resample onto external wavelength grid.
    secder = spl_init(x, y)
    sint(*,imu) = spl_interp(x, y, secder, w)

;Read and ignore Stokes Q, U, and V
    readf, unit, y, y, y
  endfor

;Close file.
  free_lun, unit

;Make plot, if requested.
  if keyword_set(plot) then begin
    if w(0) gt 1e4 then fmt='(i5)' else fmt=''
    ymin = min(sint, max=ymax)
    plot, w, sint(*,0), /xsty, yr=[ymin,ymax], /yno, xtickf=fmt
    for imu=1,nmu-1 do oplot, w, sint(*,imu)
  endif

end
