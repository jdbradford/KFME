pro cs10flx, file, w, sflx, vsini, vrt, resol=resol
;Read output from synthmag code. Special "cleaning" for Cool Stars 10
;Inputs:
; file (string) name of ".prf" file generated by synthmag
; w (vector(nx)) wavelength scale for output spectrum
; vsini (scalar) desired vsini (in km/s) for disk integration.
; vrt (scalar) radial-tangential macroturbulence (in km/s).
; resol= (scalar) instrumental resolving power to simulate.
;Outputs:
; sflx (array(nx,nmu)) intensity spectra for mu values
; mu (vector(nmu)) mu values corresponding to intensities in sint
; cint (vector(2,nmu)) continuum intensities at endpoints of x for mu values
;History:
; 12-Jul-97 Valenti  Adapted from rdmag.pro.

if n_params() lt 3 then begin
  print, 'syntax: cs10flx, file, w, sflx [, vsini, vrt ,resol=]'
  retall
endif

;Set defaults for optional keywords.
  if n_elements(vsini) eq 0 then vsini = 0		;no broadening
  if n_elements(vrt)   eq 0 then vrt   = 0		;no broadening
  if n_elements(resol) eq 0 then resol = 0		;no broadening

;Read intensities.
  cs10int, file, w, sint, mu, cint

;Disk integrate.
  nw = n_elements(w)
  wmin = min(w, max=wmax)
  wmid = 0.5 * (wmin + wmax)
  deltaw = (wmax - wmin) / (nw - 1)
  deltav = 2.99792d5 * deltaw / wmid
  sflx = rtint(mu, sint, deltav, vsini, vrt)

;Normalize continuum.
  nmu = n_elements(mu)
  c0 = !dpi * total(cint(0,*)) / nmu
  c1 = !dpi * total(cint(1,*)) / nmu
  c = c0 + (c1 - c0) * dindgen(nw) / (nw-1)
  sflx = sflx / c

;Do the instrumental broadening.
  if resol gt 0 then begin
    hwhm = 0.5 * wmid / resol
    sflx = macbro(w, sflx, hwhm)
  endif

end
